@startuml
Actor Subject
Participant Wallet
Participant Entity
Participant "Entity Backend" as Backend
Participant Blockchain
skinparam responseMessageBelowArrow true
activate Subject
activate Backend
alt Pre-generated QR
Backend -> Backend: QR Pre-generated
Backend --> Entity: QR
else User initiated presentation
Subject -> Entity: Start presentation
activate Entity
Entity -> Backend: Start presentation
Backend -> Backend: Generate QR
Backend ---> Entity: QR
deactivate Entity
end
Deactivate Backend
note right
(Presentation Definition Request 
should include response_type 
(VP_token)
end note
activate Wallet
Wallet -> Entity: Scan QR
Entity --> Wallet: request=signed JWT or \n request_uri=url_signed_jwt
Deactivate Entity
alt exists(request_uri)
Activate Backend
Wallet -> Backend: POST request_uri
Backend --> Wallet: Authentication request
Deactivate Backend
note over Entity
Response SIOP authentication request=signed JWT, 
body:response_type (VP_token) 
session ID, redirect uri, scope=openID, nonce
end note
end
Wallet -> Wallet: Extract Entity DID Public Key form signed JWT
Activate Blockchain
Wallet -> Blockchain: Query ENS with Entity DID/ Public Key
Blockchain --> Wallet: Entity Identification
Deactivate Blockchain
Wallet -> Subject: Entity Identification + \n User authentication/authorization
Subject --> Wallet: User authentication/authorization input
Wallet -> Subject: Present VC list
Subject ---> Wallet: Select VCs
Wallet -> Wallet: Generates VP_token (this includes VCs list)
Activate Backend
Wallet -> Backend: POST redirect uri. Sends VP Token with Verifiable Presentation(s)
note over Entity
Subject DID for Entity, presentation derivation (signed), chain of trust (derivation for each VC in VP Token)
end note
Backend ---> Backend: (optional by use case) Verify endpoint access
Backend -> Backend: Verify Presentation
Backend ---> Wallet: OK
deactivate Wallet
deactivate Backend
deactivate Subject


